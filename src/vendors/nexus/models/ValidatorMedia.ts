/* tslint:disable */
/* eslint-disable */
/**
 * Oasis Nexus API V1
 * An API for accessing indexed data from the Oasis Network.  <!-- Acts as a separator after search in sidebar --> # Endpoints 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ValidatorMedia
 */
export interface ValidatorMedia {
    /**
     * An URL associated with the entity.
     * @type {string}
     * @memberof ValidatorMedia
     */
    url?: string;
    /**
     * An email address associated with the entity.
     * @type {string}
     * @memberof ValidatorMedia
     */
    email?: string;
    /**
     * Twitter handle.
     * @type {string}
     * @memberof ValidatorMedia
     */
    twitter?: string;
    /**
     * Keybase handle.
     * @type {string}
     * @memberof ValidatorMedia
     */
    keybase?: string;
    /**
     * The human-readable name of this entity.
     * @type {string}
     * @memberof ValidatorMedia
     */
    name?: string;
    /**
     * URL to a logo image for the entity.
     * @type {string}
     * @memberof ValidatorMedia
     */
    logoUrl?: string;
}

export function ValidatorMediaFromJSON(json: any): ValidatorMedia {
    return ValidatorMediaFromJSONTyped(json, false);
}

export function ValidatorMediaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidatorMedia {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'url': !exists(json, 'url') ? undefined : json['url'],
        'email': !exists(json, 'email') ? undefined : json['email'],
        'twitter': !exists(json, 'twitter') ? undefined : json['twitter'],
        'keybase': !exists(json, 'keybase') ? undefined : json['keybase'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'logoUrl': !exists(json, 'logoUrl') ? undefined : json['logoUrl'],
    };
}

export function ValidatorMediaToJSON(value?: ValidatorMedia | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'url': value.url,
        'email': value.email,
        'twitter': value.twitter,
        'keybase': value.keybase,
        'name': value.name,
        'logoUrl': value.logoUrl,
    };
}


