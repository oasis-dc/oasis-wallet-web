/* tslint:disable */
/* eslint-disable */
/**
 * Oasis Nexus API V1
 * An API for accessing indexed data from the Oasis Network.  <!-- Acts as a separator after search in sidebar --> # Endpoints 
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * A node registered at the consensus layer.
 * @export
 * @interface Node
 */
export interface Node {
    /**
     * The public key identifying this node.
     * @type {string}
     * @memberof Node
     */
    id: string;
    /**
     * The public key identifying the entity controlling this node.
     * @type {string}
     * @memberof Node
     */
    entity_id: string;
    /**
     * The epoch in which this node's commitment expires.
     * @type {number}
     * @memberof Node
     */
    expiration: number;
    /**
     * The public key used for establishing TLS connections.
     * @type {string}
     * @memberof Node
     */
    tls_pubkey: string;
    /**
     * The public key that will be used for establishing TLS connections
     * upon rotation.
     * @type {string}
     * @memberof Node
     */
    tls_next_pubkey: string;
    /**
     * The unique identifier of this node on the P2P transport.
     * @type {string}
     * @memberof Node
     */
    p2p_pubkey: string;
    /**
     * The unique identifier of this node as a consensus member
     * @type {string}
     * @memberof Node
     */
    consensus_pubkey: string;
    /**
     * A bitmask representing this node's roles.
     * @type {string}
     * @memberof Node
     */
    roles: string;
}

export function NodeFromJSON(json: any): Node {
    return NodeFromJSONTyped(json, false);
}

export function NodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): Node {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'entity_id': json['entity_id'],
        'expiration': json['expiration'],
        'tls_pubkey': json['tls_pubkey'],
        'tls_next_pubkey': json['tls_next_pubkey'],
        'p2p_pubkey': json['p2p_pubkey'],
        'consensus_pubkey': json['consensus_pubkey'],
        'roles': json['roles'],
    };
}

export function NodeToJSON(value?: Node | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'entity_id': value.entity_id,
        'expiration': value.expiration,
        'tls_pubkey': value.tls_pubkey,
        'tls_next_pubkey': value.tls_next_pubkey,
        'p2p_pubkey': value.p2p_pubkey,
        'consensus_pubkey': value.consensus_pubkey,
        'roles': value.roles,
    };
}


